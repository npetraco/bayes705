#ifndef DNest4_Builder_MyModel
#define DNest4_Builder_MyModel

#include "DNest4.h"
#include <ostream>
#include <vector>

class MyModel
{
    private:
double _ppi0, ppi0;
double _ppi1, ppi1;
double _ppi2, ppi2;
double _ppi3, ppi3;
double _ppi4, ppi4;
double _ppi5, ppi5;
double _ppi6, ppi6;
double _ppi7, ppi7;
static constexpr int y0 = 554;
static constexpr int y1 = 701;
static constexpr int y2 = 749;
static constexpr int y3 = 868;
static constexpr int y4 = 516;
static constexpr int y5 = 573;
static constexpr int y6 = 978;
static constexpr int y7 = 399;
static constexpr int n0 = 1183;
static constexpr int n1 = 1510;
static constexpr int n2 = 1597;
static constexpr int n3 = 1924;
static constexpr int n4 = 1178;
static constexpr int n5 = 1324;
static constexpr int n6 = 2173;
static constexpr int n7 = 845;
static constexpr int N = 8;


    public:
        // Constructor only gives size of params
        MyModel();

        // Generate the point from the prior
        void from_prior(DNest4::RNG& rng);

        // Metropolis-Hastings proposals
        double perturb(DNest4::RNG& rng);

        // Likelihood function
        double log_likelihood() const;

        // Print to stream
        void print(std::ostream& out) const;

        // Return string with column information
        std::string description() const;
};

#endif

